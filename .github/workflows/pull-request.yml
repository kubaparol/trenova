name: Pull Request CI

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, edited]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage-report
          path: coverage/
          retention-days: 7

  status-comment:
    name: Update PR with Status
    runs-on: ubuntu-latest
    needs: [lint, unit-test]
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download unit test coverage
        uses: actions/download-artifact@v4
        with:
          name: unit-coverage-report
          path: coverage

      - name: Create Status Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: pr-status
          message: |
            ## 🚀 Pull Request Status: ${{ needs.unit-test.result == 'success' && needs.lint.result == 'success' && '✅ All checks passed!' || '❌ Some checks failed' }}

            | Check | Status |
            | ----- | ------ |
            | Lint | ${{ needs.lint.result == 'success' && '✅ Passed' || '❌ Failed' }} |
            | Tests | ${{ needs.unit-test.result == 'success' && '✅ Passed' || '❌ Failed' }} |
