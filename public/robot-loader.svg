      
<svg width="220" height="200" viewBox="0 0 220 200" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

  <title>Robot generating training plan v2</title>
  <desc>Enhanced loading animation of robot working on a plan on screen.</desc>

  <defs>
    <!-- Robot body gradient -->
    <linearGradient id="robotBodyGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#00e472; stop-opacity:1" />
      <stop offset="100%" style="stop-color:#00b657; stop-opacity:1" />
    </linearGradient>

    <!-- Robot head gradient -->
    <linearGradient id="robotHeadGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#33f48a; stop-opacity:1" />
      <stop offset="100%" style="stop-color:#00c950; stop-opacity:1" />
    </linearGradient>

    <!-- Robot arms gradient -->
    <linearGradient id="robotArmGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#00d261; stop-opacity:1" />
      <stop offset="100%" style="stop-color:#00a94d; stop-opacity:1" />
    </linearGradient>
  </defs>


  <style>
    .robot-body-fill { fill: url(#robotBodyGradient); }
    .robot-head-fill { fill: url(#robotHeadGradient); }
    .robot-arm-fill { fill: url(#robotArmGradient); }
    .robot-stroke { stroke: #2E5A8B; stroke-width: 1.5; }
    .robot-neck-fill { fill: #B0C4DE; } /* Lighter metallic gray */
    .robot-eye-fill { fill: #FFFFFF; } /* White eyes */
    .robot-pupil-fill { fill: #2C3E50; } /* Dark pupils */

    .screen-fill { fill: #F0F4F8; } /* Very light gray/blue */
    .screen-stroke { stroke: #AAB8C2; stroke-width: 1; }
    .screen-content { fill: #34495E; } /* Dark gray text */

    .progress-bar-bg { fill: #c6f5d7; }
    .progress-bar-fill { fill: #00c950; }

    .antenna-light { fill: #F39C12; } /* Orange */
  </style>

  <!-- Background (optional, for better contrast) -->
  <!-- <rect width="100%" height="100%" fill="#FFFFFF"/> -->

  <g id="robot-assembly" transform="translate(30, 40)">

    <!-- Left arm (behind body) -->
    <g id="armL">
      <rect x="0" y="65" width="25" height="60" rx="10" ry="10" class="robot-arm-fill robot-stroke" transform="rotate(-10 10 95)" />
    </g>

     <!-- Robot body -->
    <rect x="15" y="55" width="70" height="90" rx="15" ry="15" class="robot-body-fill robot-stroke"/>

     <!-- Right arm (in front of body, closer to screen) -->
    <g id="armR">
       <rect x="80" y="75" width="25" height="55" rx="10" ry="10" class="robot-arm-fill robot-stroke" transform="rotate(15 90 100)" />
    </g>

    <!-- Neck -->
    <rect x="35" y="45" width="30" height="15" rx="5" ry="5" class="robot-neck-fill robot-stroke"/>

    <!-- Head (with nodding animation) -->
    <g id="head" transform="translate(25, 5)">
      <animateTransform
         attributeName="transform"
         attributeType="XML"
         type="rotate"
         values="0 25 25; -3 25 25; 3 25 25; 0 25 25"
         keyTimes="0; 0.3; 0.7; 1"
         dur="4s"
         repeatCount="indefinite"
         additive="sum"
         calcMode="spline"
         keySplines="0.42 0 0.58 1; 0.42 0 0.58 1; 0.42 0 0.58 1"
       />
      <rect x="0" y="0" width="50" height="45" rx="10" ry="10" class="robot-head-fill robot-stroke"/>

      <!-- Eyes -->
      <g id="eyes">
        <circle cx="15" cy="22" r="7" class="robot-eye-fill"/>
        <circle cx="35" cy="22" r="7" class="robot-eye-fill"/>
        <circle id="pupilL" cx="15" cy="22" r="3" class="robot-pupil-fill">
           <!-- Blinking animation by vertically scaling pupil -->
           <animateTransform attributeName="transform" type="scale"
                values="1 1; 1 0.1; 1 1; 1 1"
                keyTimes="0; 0.05; 0.1; 1"
                dur="3.5s" repeatCount="indefinite" begin="0.3s"
                additive="sum" calcMode="spline" keySplines="0.5 0 0.5 1; 0.5 0 0.5 1; 0 0 1 1"/>
        </circle>
         <circle id="pupilR" cx="35" cy="22" r="3" class="robot-pupil-fill">
           <animateTransform attributeName="transform" type="scale"
                values="1 1; 1 0.1; 1 1; 1 1"
                keyTimes="0; 0.05; 0.1; 1"
                dur="3.5s" repeatCount="indefinite" begin="0.8s"
                additive="sum" calcMode="spline" keySplines="0.5 0 0.5 1; 0.5 0 0.5 1; 0 0 1 1"/>
        </circle>
      </g>

      <!-- Antenna -->
      <line x1="25" y1="0" x2="25" y2="-10" stroke="#AAB8C2" stroke-width="2"/>
      <circle id="antenna-signal" cx="25" cy="-13" r="4" class="antenna-light">
        <animate attributeName="r" values="4; 5; 4" dur="0.8s" repeatCount="indefinite" />
        <animate attributeName="opacity" values="1; 0.5; 1" dur="0.8s" repeatCount="indefinite" />
      </circle>
    </g>

  </g> <!-- End robot-assembly -->

  <!-- Screen / Tablet -->
  <g id="screen" transform="translate(115, 75)">
    <!-- Screen frame -->
    <rect x="0" y="0" width="90" height="70" rx="8" ry="8" class="screen-stroke screen-fill"/>

    <!-- Screen content - text lines -->
    <g id="screen-content-lines">
       <rect class="screen-content" x="10" y="10" width="70" height="5" rx="2" ry="2">
         <animate attributeName="opacity" values="0;1;1;0;0" dur="4s" repeatCount="indefinite" begin="0s"/>
      </rect>
      <rect class="screen-content" x="10" y="20" width="65" height="5" rx="2" ry="2">
          <animate attributeName="opacity" values="0;0;1;1;0" dur="4s" repeatCount="indefinite" begin="0.6s"/>
      </rect>
       <rect class="screen-content" x="10" y="30" width="70" height="5" rx="2" ry="2">
          <animate attributeName="opacity" values="0;0;0;1;1" dur="4s" repeatCount="indefinite" begin="1.2s"/>
      </rect>
    </g>

    <!-- Progress bar -->
    <g id="progress-area">
      <!-- Progress bar background -->
      <rect class="progress-bar-bg" x="10" y="50" width="70" height="8" rx="4" ry="4"/>
      <!-- Progress bar fill -->
      <rect id="progressBar" class="progress-bar-fill" x="10" y="50" width="0" height="8" rx="4" ry="4">
        <animate attributeName="width" values="0; 70; 0" keyTimes="0; 0.85; 1" dur="3.8s" repeatCount="indefinite" />
      </rect>
    </g>
  </g> <!-- End screen -->

</svg>
